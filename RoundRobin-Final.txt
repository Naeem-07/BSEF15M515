i,j,= 0,0
size = input("Enter number of processes: ")
size = int(size)
numpc = int(size) 
remain = int(size)

processes = [[0 for j in range(3)]for i in range(size)]

for i in range(size):
	processes[i][0] = input("Enter Process ID: ")
	print("Enter Arrival time of ",processes[i][0],' : ')
	processes[i][1] = input()
	print("Enter Burst time of ",processes[i][0],' : ')
	processes[i][2] = input()

stime = input ("Enter Slice time: ")
import time
total_time = 0 
i=0
while i <= numpc:
	if i == size:
		i = 0
	elif total_time >= int(processes[i][1]):   # Compare with Arrival time 
		if int(processes[i][2]) == 0:
			remain = remain - 1
			del processes[i]    #Delete process
			size = size - 1
			if remain == 0:
				break
		elif int(processes[i][2]) > int(stime):   # Greater
			print(processes[i][0]," processing & Arrival Time = ",processes[i][1]," & Burst Time = ",processes[i][2])
			time.sleep(int(stime))
			total_time = total_time + int(stime)
			processes[i][2] = int(processes[i][2]) - int(stime)  #Update
			print("Remaining time of ",processes[i][0]," = ",processes[i][2])
			if i != size:
				i = i+1
		elif int(processes[i][2]) <= int(stime):
			print(processes[i][0]," processing & Arrival Time = ",processes[i][1]," & Burst Time = ",processes[i][2])
			time.sleep(int(processes[i][2]))
			total_time = total_time + int(processes[i][2])
			processes[i][2] = 0  #Update = 0
			print("Remaining time of ",processes[i][0]," = ",processes[i][2])
			if i !=size:
				i = i+1
	elif total_time < int(processes[i][1]):
		i = 0